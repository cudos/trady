<!DOCTYPE html>
<html>
<head lang="en">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{{ symbol }}</title>
  <!-- <link rel="stylesheet" href="static/pure-release-0.6.2/pure-min.css"> -->
  <script src="/static/jquery-3.1.1.min.js"></script>
  <script src="/static/highstock/code/highstock.js"></script>
</head>
<body>
  <h1>{{ symbol }} Stock Report</h1>
  <div id="prices"></div>
  <div id="return-distribution"></div>
  <div id="volatilities"></div>
</body>
<script>
  $(function () {
    $.getJSON('chart?symbol={{ symbol }}', function (data) {
      console.log(data);
      // Prepare data
      var len = data.length,
          ohlc = [],
          volume = [],
          volatilities_30d = [],
          i;

      for (i = 0; i < data.length; i += 1) {
        ohlc.push([
          data[i].date,
          data[i].open,
          data[i].high,
          data[i].low,
          data[i].close
        ]);
        volume.push([
          data[i].date,
          data[i].volume,
        ]);
        volatilities_30d.push([
          data[i].date,
          data[i].volatility_30d,
        ]);
      }

      // Plot prices
      Highcharts.stockChart('prices', {
        chart: {
          height: 800
        },
        rangeSelector: {
          selected: 5
        },
        title: {
          text: '{{ symbol }} Stock Prices, Volumes and Volatilities'
        },
        yAxis: [{
          labels: {
            align: 'right',
            x: -3
          },
          title: {
            text: 'OHLC'
          },
          height: '40%',
          lineWidth: 2
        }, {
          labels: {
            align: 'right',
            x: -3
          },
          title: {
            text: 'Anualized 30 Day Volatility'
          },
          top: '60%',
          height: '35%',
          offset: 0,
          lineWidth: 2
        }, {
          labels: {
            align: 'right',
            x: -3
          },
          title: {
            text: 'Volume'
          },
          top: '45%',
          height: '10%',
          offset: 0,
          lineWidth: 2
        }],
        series: [{
          type: 'candlestick',
          name: 'Price',
          data: ohlc,
          tooltip: {
            valueDecimals: 2
          }
        }, {
          type: 'column',
          name: 'Volume',
          data: volume,
          yAxis: 2,
        }, {
          name: 'Anualized 30 Day Volatility',
          data: volatilities_30d,
          lineWidth: 0,
          marker: {
            enabled: true,
            radius: 3
          },
          tooltip: {
            valueDecimals: 2
          },
          states: {
            hover: {
              lineWidthPlus: 0
            }
          },
          yAxis: 1
        }]
      });

      function histogram(data, step) {
        var hist = {},
            x,
            i,
            arr = [];

        for (i = 0; i < data.length; i++) {
          x = Math.floor(data[i]['log_return'] / step) * step;
          if (!hist[x]) {
            hist[x] = 0;
          }
          hist[x]++;
        }

        for (x in hist) {
          if (hist.hasOwnProperty((x))) {
            arr.push([parseFloat(x), hist[x]]);
          }
        }

        arr.sort(function(a, b) {
          return a[0] - b[0];
        })

        return arr;
      }

      // Plot distribution of returns
      Highcharts.chart('return-distribution', {
        chart: {
          type: 'column',
        },
        title: {
          text: '{{ symbol }} Continuously Compounded Return Distribution'
        },
        xAxis: {
          gridLineWidth: 1
        },
        yAxis: [{
          title: {
            text: 'Histogram Count',
          },
        }],
        series: [{
          name: 'Histogram',
          type: 'column',
          data: histogram(data, 0.001),
          pointPadding: 0,
          groupPadding: 0,
          pointPlacement: 'between',
        }]
      });

      // Next plot goes here...

    })
  })
</script>
</html>
